#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Movie {
public:
    string title;
    string genre;
    int rating;

    Movie(string title, string genre, int rating) : title(title), genre(genre), rating(rating) {}
};

class Theater {
public:
    string name;
    vector<Movie> movies;

    Theater(string name) : name(name) {}

    void AddMovie(Movie movie) {
        movies.push_back(movie);
    }

    void DisplayMovies() {
        cout << "Movies playing at " << name << ":\n";
        for (const Movie& movie : movies) {
            cout << "Title: " << movie.title << "\n";
            cout << "Genre: " << movie.genre << "\n";
            cout << "Rating: " << movie.rating << "\n";
            cout << "-------------------------\n";
        }
    }
};

class BookingSystem {
public:
    vector<Theater> theaters;

    void AddTheater(Theater theater) {
        theaters.push_back(theater);
    }

    void DisplayTheaters() {
        cout << "Available Theaters:\n";
        for (const Theater& theater : theaters) {
            cout << theater.name << "\n";
        }
    }

    Theater* FindTheaterByName(string name) {
        for (Theater& theater : theaters) {
            if (theater.name == name) {
                return &theater;
            }
        }
        return nullptr;
    }

    Movie* FindMovieByTitle(Theater* theater, string title) {
        if (theater == nullptr) {
            return nullptr;
        }

        for (Movie& movie : theater->movies) {
            if (movie.title == title) {
                return &movie;
            }
        }
        return nullptr;
    }
};

int main() {
    BookingSystem bookingSystem;

    // Create theaters and movies
    Theater theater1("Cinema 1");
    Theater theater2("Cinema 2");

    Movie movie1("Movie 1", "Action", 8);
    Movie movie2("Movie 2", "Comedy", 7);
    Movie movie3("Movie 3", "Drama", 9);

    theater1.AddMovie(movie1);
    theater1.AddMovie(movie2);
    theater2.AddMovie(movie3);

    bookingSystem.AddTheater(theater1);
    bookingSystem.AddTheater(theater2);

    bookingSystem.DisplayTheaters();

    string theaterName, movieTitle;
    cout << "Enter the theater name: ";
    cin >> theaterName;
    Theater* selectedTheater = bookingSystem.FindTheaterByName(theaterName);

    if (selectedTheater) {
        selectedTheater->DisplayMovies();
        cout << "Enter the movie title you want to book: ";
        cin >> movieTitle;
        Movie* selectedMovie = bookingSystem.FindMovieByTitle(selectedTheater, movieTitle);

        if (selectedMovie) {
            cout << "You have successfully booked the movie: " << selectedMovie->title << " at " << selectedTheater->name << ". Enjoy your show!\n";
        } else {
            cout << "Movie not found in the selected theater.\n";
        }
    } else {
        cout << "Theater not found.\n";
    }

    return 0;
}
